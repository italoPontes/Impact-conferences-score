cor(data$BR_score, data$H.index, method="spearman")
cor(data$BR_score, data$Total.Refs., method="spearman")
cor(data$BR_score, data$SJR, use = "pairwise.complete.obs", method="kendall") #0.61
cor(data$BR_score, data$SJR, na.rm = TRUE, method="spearman") #0.61
g <- ggplot(data, aes(BR_score, SJR)) +
geom_count() +
geom_smooth(method="lm", se=F)
ggMarginal(g, type = "boxplot", fill="transparent")
ggMarginal(g, type = "histogram", fill="transparent")
g <- ggplot(data, aes(BR_score, SJR)) +
geom_count() +
geom_smooth(method="lm", se=T)
ggMarginal(g, type = "boxplot", fill="transparent")
View(data)
min(as.numeric(data[data$BR_score == 8, ]$Total.Docs...2016.)) # 369
max(as.numeric(data[data$BR_score == 7, ]$Total.Docs...2016.)) # 2088
max(as.numeric(data[data$BR_score == 6, ]$Total.Docs...2016.)) # 2091
max(as.numeric(data[data$BR_score == 5, ]$Total.Docs...2016.)) # 2088
max(as.numeric(data[data$BR_score == 4, ]$Total.Docs...2016.)) # 2087
max(as.numeric(data[data$BR_score == 3, ]$Total.Docs...2016.)) # 2087
max(as.numeric(data[data$BR_score == 2, ]$Total.Docs...2016.)) # 2081
max(as.numeric(data[data$BR_score == 1, ]$Total.Docs...2016.)) # 2072
a<-data[data$BR_score == 1, ]
View(a)
a<-as.numeric(data[data$BR_score == 1, ]$Total.Docs...2016.)
a<-data[data$BR_score == 1, ]
min(as.numeric(data[data$BR_score == 8, ]$Citable.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 7, ]$Citable.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 6, ]$Citable.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 5, ]$Citable.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 4, ]$Citable.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 3, ]$Citable.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 2, ]$Citable.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 1, ]$Citable.Docs...3years.)) #
min(as.numeric(data[data$BR_score == 8, ]$Total.Docs...2016.)) #
max(as.numeric(data[data$BR_score == 7, ]$Total.Docs...2016.)) #
max(as.numeric(data[data$BR_score == 6, ]$Total.Docs...2016.)) #
max(as.numeric(data[data$BR_score == 5, ]$Total.Docs...2016.)) #
max(as.numeric(data[data$BR_score == 4, ]$Total.Docs...2016.)) #
max(as.numeric(data[data$BR_score == 3, ]$Total.Docs...2016.)) #
max(as.numeric(data[data$BR_score == 2, ]$Total.Docs...2016.)) #
max(as.numeric(data[data$BR_score == 1, ]$Total.Docs...2016.)) #
min(as.numeric(data[data$BR_score == 8, ]$Total.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 7, ]$Total.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 6, ]$Total.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 5, ]$Total.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 4, ]$Total.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 3, ]$Total.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 2, ]$Total.Docs...3years.)) #
max(as.numeric(data[data$BR_score == 1, ]$Total.Docs...3years.)) #
min(as.numeric(data[data$BR_score == 8, ]$Total.Refs.)) #
max(as.numeric(data[data$BR_score == 7, ]$Total.Refs.)) #
max(as.numeric(data[data$BR_score == 6, ]$Total.Refs.)) #
max(as.numeric(data[data$BR_score == 5, ]$Total.Refs.)) #
max(as.numeric(data[data$BR_score == 4, ]$Total.Refs.)) #
max(as.numeric(data[data$BR_score == 3, ]$Total.Refs.)) #
max(as.numeric(data[data$BR_score == 2, ]$Total.Refs.)) #
max(as.numeric(data[data$BR_score == 1, ]$Total.Refs.)) #
min(as.numeric(data[data$BR_score == 8, ]$Total.Cites..3years.)) #
max(as.numeric(data[data$BR_score == 7, ]$Total.Cites..3years.)) #
max(as.numeric(data[data$BR_score == 6, ]$Total.Cites..3years.)) #
max(as.numeric(data[data$BR_score == 5, ]$Total.Cites..3years.)) #
max(as.numeric(data[data$BR_score == 4, ]$Total.Cites..3years.)) #
max(as.numeric(data[data$BR_score == 3, ]$Total.Cites..3years.)) #
max(as.numeric(data[data$BR_score == 2, ]$Total.Cites..3years.)) #
max(as.numeric(data[data$BR_score == 1, ]$Total.Cites..3years.)) #
cor(data$H.index, data$SJR, use = "pairwise.complete.obs")
cor(data$Total.Refs., data$SJR, use = "pairwise.complete.obs")
cor(data$Citable.Docs...3years., data$SJR, use = "pairwise.complete.obs")
cor(as.numeric(data$Citable.Docs...3years.), data$SJR, use = "pairwise.complete.obs")
cor(as.numeric(data$Cites...Doc...2years.), data$SJR, use = "pairwise.complete.obs")
cor(data$BR_score, data$Cites...Doc...2years., method="spearman") #0.02
cor(data$BR_score, as.numeric(data$Cites...Doc...2years.), method="spearman") #0.02
cor(data$Total.Refs., data$SJR, use = "pairwise.complete.obs")
cor(as.numeric(data$Citable.Docs...3years.), data$SJR, use = "pairwise.complete.obs")
cor(as.numeric(data$Cites...Doc...2years.), data$SJR, use = "pairwise.complete.obs")
cor(as.numeric(data$Ref....Doc.), data$SJR, use = "pairwise.complete.obs")
data$SJR.Best.Quartile <- as.integer(data$SJR.Best.Quartile)
cor(data$BR_score, data$SJR.Best.Quartile, method="spearman")
cor(data$Total.Refs., data$SJR, use = "pairwise.complete.obs")
cor(as.numeric(data$Citable.Docs...3years.), data$SJR, use = "pairwise.complete.obs")
cor(as.numeric(data$Cites...Doc...2years.), data$SJR, use = "pairwise.complete.obs")
cor(as.numeric(data$Ref....Doc.), data$SJR, use = "pairwise.complete.obs")
max(as.numeric(data[data$BR_score == 1, ]$Total.Docs...2years.)) #
cor(data$BR_score, as.numeric(data$Cites...Doc...3years.), method="spearman") #0.58
cor(data$BR_score, as.numeric(data$Citable.Docs...3years.), method="spearman") #0.58
cor(data$BR_score, data$SJR, use = "pairwise.complete.obs", method="spearman") #0.61
exp(data$BR_score)
cor(exp(data$BR_score), data$SJR, use = "pairwise.complete.obs", method="spearman") #0.61
# ~~~
exp(8)
# ~~~
pow(8)
cor(log(data$BR_score), data$SJR, use = "pairwise.complete.obs", method="spearman") #0.61
source('/media/workspace/Impact-conferences-score/src/data-analysis.R', echo=TRUE)
cor.test(data$BR_score, data$SJR, use = "pairwise.complete.obs", method="spearman") #0.61
cor.test(data$BR_score, data$H.index, method="spearman") #-0.03
source('/media/workspace/Impact-conferences-score/src/data-analysis.R', echo=TRUE)
count(qualis_data$BR_score)
library(plyr)
count(qualis_data$BR_score)
count(data$BR_score)
a <- count(qualis_data$BR_score)
a
a$test <- 1
a
a <- data.frame(count(qualis_data$BR_score)$cat<-3)
a <- data.frame(count(qualis_data$BR_score))$cat<-3
data_to_show <- count(qualis_data$BR_score)
data_to_show$type <- 'Original'
View(data_to_show)
aux <- count(data$BR_score)
aux$type <- 'Filtered'
rbind(data_to_show, aux)
data_to_show <- rbind(data_to_show, aux)
ggplot(data_to_show, aes(x=type))
ggplot(data_to_show, aes(x=freq, color=type))
ggplot(data_to_show, aes(color=freq, x=type))
ggplot(data_to_show, aes(color=type, x=x))
ggplot(data_to_show, aes(x=type, x=type))
ggplot(data_to_show, aes(x=type, color=type))
ggplot(data_to_show, aes(x=x, color=type))
ggplot(data_to_show, aes(x=type, color=x))
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("F", "M"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5), rnorm(200, mean=65, sd=5)))
)
View(df)
data_to_show
ggplot(data_to_show, aes(x=x, color=type))
ggplot(data_to_show, aes(x=x, color=type)) +
geom_histogram(fill="white")
ggplot(data_to_show, aes(x=x, color=type)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(data.frame(data_to_show), aes(x=type)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(data.frame(data_to_show), aes(x=as.factor(type))) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(data.frame(data_to_show), aes(x=x)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(data.frame(data_to_show), aes(x=x, color=type)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=x, color=type)) +
geom_bar(fill="white", alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=x)) +
geom_bar(fill="white", alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type)) +
geom_bar(fill="white", alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, fill=type)) +
geom_bar(fill="white", alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, fill=type, color=type)) +
geom_bar(fill="white", alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, fill=type, color=type)) +
geom_bar( alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, fill=type)) +
geom_bar( alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type)) +
geom_bar( alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, fill=type)) +
geom_bar( alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, fill=type)) +
geom_bar(fill=type, alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type)) +
geom_bar(fill=type, alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=freq)) +
geom_bar(fill=type, alpha=0.5, position="identity")
data_to_show
ggplot(data_to_show, aes(x=type, y=freq)) +
geom_bar(fill=type, alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=freq)) +
geom_bar(alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=as.numeric(freq))) +
geom_bar(alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=as.numeric(freq)))) +
geom_bar(alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=as.integer(freq)))) +
geom_bar(alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=freq))) +
geom_bar(alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=freq, fill=type))) +
geom_bar(alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=freq, fill=type))) +
geom_bar(position=position_dodge(), alpha=0.5, position="identity")
ggplot(data_to_show, aes(x=type, y=freq, fill=type))) +
geom_bar(position="identity", position=position_dodge())
ggplot(data_to_show, aes(x=x, y=freq, fill=type)) +
geom_bar(position="identity", position=position_dodge())
ggplot(data_to_show, aes(x=x, y=freq, fill=type)) +
geom_bar(position="identity")
ggplot(data_to_show, aes(x=x, y=freq, fill=type)) +
geom_bar()
ggplot(data_to_show, aes(x=x,fill=type)) +
geom_bar()
ggplot(data_to_show, aes(x=x,fill=type)) +
geom_bar(position=position_dodge())
ggplot(data_to_show, aes(x=x,fill=type)) +
geom_bar(position=position_dodge2())
ggplot(data_to_show, aes(x=x,fill=type)) +
geom_bar(position=position_dodge2(), alpha=0.5)
ggplot(data_to_show, aes(x=x,fill=type)) +
geom_bar(position=position_dodge2(), alpha=0.8) +
theme_light()
ggplot(data_to_show, aes(x=x,fill=type, y=freq)) +
geom_bar(position=position_dodge2(), alpha=0.8) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq)) +
geom_bar(position=position_dodge2(), alpha=0.8) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq)) +
geom_bin(position=position_dodge2(), alpha=0.8) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq)) +
geom_bin2d(position=position_dodge2(), alpha=0.8) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq, x=x)) +
geom_bin2d(position=position_dodge2(), alpha=0.8) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq, x=x)) +
geom_bin2d(alpha=0.8) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq, x=x)) +
geom_bin2d(alpha=0.8, position=position_dodge2()) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq, x=x)) +
geom_histogram(alpha=0.8, position=position_dodge2()) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq, x=x)) +
geom_bin2(alpha=0.8, position=position_dodge2()) +
theme_light()
ggplot(data_to_show, aes(fill=type, y=freq, x=x)) +
geom_bin2d(alpha=0.8, position=position_dodge2()) +
theme_light()
a<-ggplot(data_to_show, aes(fill=type, y=freq, x=x)) +
geom_bin2d(alpha=0.8, position=position_dodge2()) +
theme_light()
library(plotly)
install.packages(plotly)
install.packages('plotly')
library(plotly)
library(plotly)
ggploty(a)
gploty(a)
ggplotly(a)
ggplot(data_to_show, aes(x, freq, color=type))
ggplot(data_to_show, aes(x, freq, color=type))+
geom_bar()
ggplot(data_to_show, aes(as.factor(x), freq, color=type))+
geom_bar()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, color=type))+
geom_bar()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, color=type))+
geom_bin2d()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, color=type))+
geom_histogram()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, color=type))+
geom_bar()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, color=type))+
geom_bar(stat = "identity")
ggplot(data_to_show, aes(x=as.factor(x), y=freq, color=type))+
geom_bar(stat = "identity", position=position_dodge())
ggplot(data_to_show, aes(x=as.factor(x), y=freq, color=type))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, color=type))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type, order=-type))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type, order=-as.numeric(type))+
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type, order=-as.numeric(type)))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type, order=-as.numeric(type)))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type, order=-as.numeric(type)))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type, order=as.numeric(type)))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light(legend='asd')
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge()) +
theme_light(legend.text='asd')
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2()) +
xlab("Months") + ylab("Count") +
ggtitle("Chickens & Eggs")
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Months") + ylab("Count") +
ggtitle("Chickens & Eggs") +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.7) +
xlab("Months") + ylab("Count") +
ggtitle("Chickens & Eggs") +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.6) +
xlab("Months") + ylab("Count") +
ggtitle("Chickens & Eggs") +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.8) +
xlab("Months") + ylab("Count") +
ggtitle("Chickens & Eggs") +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Months") + ylab("Count") +
ggtitle("Chickens & Eggs") +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Score") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "New Legend Title") +
theme_light()
ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "Category") +
theme_light()
ggplotly(ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "Category") +
theme_light())
ggplotly(ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "Category", levels(c('Original','Filtered'))) +
theme_light())
ggplotly(ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "Category", levels=c('Original','Filtered')) +
theme_light())
ggplotly(ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "Category") +
theme_light())
aux$type <- 'Post-Filtered'
data_to_show <- rbind(data_to_show, aux)
ggplotly(ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "Category") +
theme_light())
data_to_show <- count(qualis_data$BR_score)
data_to_show$type <- 'Original'
aux <- count(data$BR_score)
aux$type <- 'Post-Filtered'
data_to_show <- rbind(data_to_show, aux)
ggplotly(ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "Category") +
theme_light())
plot(cars)
install.packages("rmarkdown"
install.packages("rmarkdown"
)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("knitr")
require(devtools)
install_github("rCharts", "ramnathv", ref = "dev")
cor()
?cor()
cor([1,2,3,4],[1,2,3,4])
[1,2,3,4]
(1,2,3,4)
cor(data.frame([1,2,3,4]))
cor(c([1,2,3,4]))
cor(c(1,2,3,4))
cor(c(1,2,3,4),c(1,2,3,4))
cor(c(1,2,3,4),c(1,4,8,16))
inter_data$SJR <- as.numeric(inter_data$SJR)
inter_data$H.index <- as.numeric(inter_data$H.index)
cor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9))
cor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9),method="spearman")
cor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9),method="pearson")
cor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9),method="kendall")
hetcor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9))
require(mvtnorm)
install.packages('mvtnorm')
require(mvtnorm)
hetcor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9))
library(Hmisc)
install.packages('Hmisc')
require('Hmisc')
library(polycor)
install.packages('polycor')
library(polycor)
hetcor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9))
rcor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9))
library(Hmisc)
rcor(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9))
rcorr(c(1,1,1,2,2,2,3,3,3),c(1,2,3,4,5,6,7,8,9))
source('/media/workspace/Impact-conferences-score/src/data-analysis.R', echo=TRUE)
ggplot(data, aes(x=SJR, color=BR_score)) +
geom_histogram(fill="white")
ggplot(data, aes(x=SJR, color=as.factor(BR_score))) +
geom_histogram(fill="white")
ggplot(data, aes(x=SJR, color=as.factor(BR_score))) +
geom_histogram(fill="white", alpha=0.5, position="identity")
ggplot(data, aes(x=SJR, color=as.factor(BR_score))) +
geom_histogram(fill="white", alpha=0.5, position="dogde")
ggplot(data, aes(x=SJR, color=as.factor(BR_score))) +
geom_histogram(fill="white", alpha=0.5, position="dodge")
ggplot(data, aes(x=SJR, color=as.factor(BR_score))) +
geom_histogram(alpha=0.5, position="dodge")
ggplot(data, aes(x=SJR, color=as.factor(BR_score), fill=as.factor(BR_score))) +
geom_histogram(alpha=0.5, position="dodge")
ggplot(data, aes(x=SJR, color=as.factor(BR_score), fill=as.factor(BR_score))) +
geom_boxplot()
ggplot(data, aes(x=as.factor(BR_score), y=SJR)) +
geom_boxplot()
ggplot(data, aes(x=as.factor(BR_score), y=SJR)) +
geom_boxplot()+ theme_bw()
t1 = c(164, 172, 168, 177, 156, 195)
t2 = c(178, 191, 197, 182, 185, 177)
t3 = c(175, 193, 178, 171, 163, 176)
t4 = c(155, 166, 149, 164, 170, 168)
val = c(t1, t2, t3, t4)
fac = gl(n=4, k=6, labels=c('type1', 'type2', 'type3', 'type4'))
aov1 = aov(val ~ fac)
aov(val~fac)
val
fac
aov(data$BR_score ~ data$SJR)
summary(aov(data$BR_score ~ data$SJR))
summary(aov(data$BR_score ~ data$BR_score))
summary(aov(data$SJR ~ data$BR_score))
kruskal.test(BR_score ~ SKR, data = data)
kruskal.test(BR_score ~ SJR, data = data)
wilcox.test(BR_score ~ SJR, data = data)
wilcox.test(data$BR_score, data$SJR)
```{r}
library(ggplot2)
library(ggExtra)
library(plotly)
library(plyr)
qualis_filename <- "../data/Brazil_CAPES_evaluations.csv"
qualis_data <- read.csv2(file=qualis_filename, sep=',')
colnames(qualis_data) <- c('Issn', 'Title', 'field', 'BR_score')
qualis_data$Issn <- gsub('-', '', qualis_data$Issn)
# Convert A1 to 8, and C to 1. A1 is the best one score.
qualis_data$BR_score <- as.integer(qualis_data$BR_score)*(-1)+9
# ~~~
international_filename <- "../data/Scimagojr2016.csv"
inter_data <- read.csv2(file=international_filename)
inter_data$SJR <- as.numeric(inter_data$SJR)
inter_data$H.index <- as.numeric(inter_data$H.index)
# ~~~
# Merge two dataframe: qualis data from Brazil and SJR international data
data <- merge(x=qualis_data, y=inter_data, by='Issn') # It was retrieved only 153 journals!
data$BR_score <- as.integer(data$BR_score)
data$Total.Refs. <- as.integer(data$Total.Refs.)
# ~~~
data_to_show <- count(qualis_data$BR_score)
data_to_show$type <- 'Original'
aux <- count(data$BR_score)
aux$type <- 'Post-Filtered'
data_to_show <- rbind(data_to_show, aux)
ggplotly(ggplot(data_to_show, aes(x=as.factor(x), y=freq, fill=type))+
geom_bar(stat = "identity", position=position_dodge2(), alpha=.9) +
xlab("Level") + ylab("Quantity") +
ggtitle("Journals score distribuition") +
scale_fill_discrete(name = "Category") +
theme_light())
```
pegar o evento A1 com menor fator de impacto e comparar com o fator de impacto de um A2/B1/etc
View(data)
View(qualis_data)
qualis_data
qualis_data$Issn=='21752745'
qualis_data[qualis_data$Issn=='21752745', ]
View(data)
View(data)
data[data$Issn=='21752745', ]
View(inter_data)
View(inter_data)
[data.frame(table(inter_data$Issn))$Freq >1, ]
a=data.frame(table(inter_data$Issn))
a
a[a$Freq>1,]
r=a[a$Freq>1,]
View(r)
